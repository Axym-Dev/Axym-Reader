@namespace Reader.Shared.Layout

@using MudBlazor
@using Reader.Data.Storage
@using Reader.Shared.Misc
@inject BaseUIStorage c
@inject Constants constants
@inject ISnackbar Snackbar
@inject IDialogService DialogService
<style>
    .blurry {
        backdrop-filter: blur(10px);
    }
</style>
<nav id="nav" class="sticky top-0 z-10 z-50">
    @if (c.NavbarData.SpecialAnnouncement != "" || c.NavbarData.SpecialAnnouncementBypass) {
        <div id="special-announcement" class="z-10 z-50 flex justify-center text-center px-1.5 text-sm md:text-base text-white items-center py-3 md:py-1" onload="sizeNav();" style="height: 3rem; background: @(DesignStorage.SpecialAnnouncementBg);">
            @c.NavbarData.SpecialAnnouncement
        </div>
    }
    <div id="navbar-contents" class="backdrop-filter backdrop-blur-md flex z-10 z-50 pt-1" style="height: 62px;">
        <div id="navbar-logo" class="w-full md:w-1/5 lg:w-1/6 2xl:w-1/12 bg-primary flex justify-between md:justify-center items-center mx-2">
            <a href="/" class="whitespace-nowrap">
                <img src="/static/assets/logo.png" alt="@Constants.ProjectName" class="w-12 mr-4 inline-block">
                @Constants.ProjectName
            </a>
            <div id="toggle-mobile-nav" class="md:hidden">
                <button id="toggle-nav-mobile-btn" class="relative group" data-active="0" onclick="toggleNavMobile(this);" aria-label="Open Menu Mobile">
                    <div class="relative rounded-xl flex overflow-hidden items-center justify-center w-[50px] h-[50px] transform transition-all duration-200">
                        <div class="flex flex-col justify-between w-[20px] h-[18px] transform transition-all duration-300 origin-center overflow-hidden">
                            <div class="bg-white h-[2px] w-7 transform transition-all duration-300 origin-left group-focus:translate-x-10"></div>
                            <div class="bg-white h-[2px] w-7 rounded transform transition-all duration-300 group-focus:translate-x-10 delay-75"></div>
                            <div class="bg-white h-[2px] w-7 transform transition-all duration-300 origin-left group-focus:translate-x-10 delay-150"></div>

                            <div class="absolute items-center justify-between transform transition-all duration-500 top-2.5 -translate-x-10 group-focus:translate-x-0 flex w-0 group-focus:w-12">
                                <div class="absolute bg-white h-[2px] w-5 transform transition-all duration-500 rotate-0 delay-300 group-focus:rotate-45"></div>
                                <div class="absolute bg-white h-[2px] w-5 transform transition-all duration-500 -rotate-0 delay-300 group-focus:-rotate-45"></div>
                            </div>
                        </div>
                    </div>
                </button>
            </div>
        </div>
        <div id="navbar-links" class="absolute md:!relative !top-12 md:!top-0 w-full md:w-auto md:block hidden md:grow z-100 pr-2">
            <div class="flex flex-col md:flex-row justify-end h-full items-center bg-bgcol md:bg-transparent pb-8 md:!pb-0">
                @foreach (var linkPair in c.NavbarData.Links) {
                    <a href="@linkPair.Url" target="@linkPair.Target" class="mx-4 md:mx-8 my-2 md:my-0 hover:underline text-gray-300 hover:text-focusColor text-b500">@linkPair.Name</a>
                }
                <MudFab IconSize="Size.Medium" Size="Size.Small" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Info" DisableElevation="true" OnClick="SwitchShortCutReference" />
                <MudDialog Options="dialogOptions" @bind-IsVisible="ShowShortCutReference" Class="rounded-lg shadow-xl !bg-bgcol blurry">
                    <TitleContent>
                        <MudText Style="text-align: center" Typo="Typo.h3">Shortcut reference</MudText>
                    </TitleContent>
                    <DialogContent>
                        <MudContainer Style="max-height: 500px; overflow-y:scroll" >
                            <MudStack Row="true">
                                <MudContainer Style="max-width: 30%">
                                    <MudList>
                                        @foreach (var (title, icon, desc) in titleIconDescription)
                                        {
                                            <MudListItem>
                                                <MudFab Size="Size.Large" Color="Color.Tertiary" StartIcon="@icon" Label="@title" OnClick="((e) => SwitchToCurrentShortCut((title,icon,desc)))" />
                                            </MudListItem>
                                        }
                                    </MudList>
                                </MudContainer>
                                <MudPaper>
                                    <MudStack Class="justify-center">
                                        <MudText Typo="Typo.h4">@CurrentShortCut.Item1</MudText>
                                        <MudFab Size="Size.Large" Color="Color.Tertiary" StartIcon="@CurrentShortCut.Item2"></MudFab>
                                        <MudText>@CurrentShortCut.Item3</MudText>
                                    </MudStack>

                                </MudPaper>
                            </MudStack>

                        </MudContainer>



                    </DialogContent>
                </MudDialog>
                <ShareView />

            </div>

        </div>
    </div>

</nav>


@code {

    List<ValueTuple<string, string, string>> titleIconDescription = new() { 
        ("Space", Icons.Material.Filled.SpaceBar, "Spacebar can be used to both start and stop the reader"),
        ("Arrows", "", "The arrows are used to navigate the selected reader text and can be used to skip back and forth to certain positions"),
        ("CTRL + F","","Is used to activate focus mode. Is toggled by pressing the key"),
        ("CTRL + S","","The S key can be pressed to toggle the settings dialogue"),
        ("CTRL + E","", "CTRL + E or Shift + E toggle the text panel")
    };

    ValueTuple<string, string, string> CurrentShortCut = default!;

    bool ShowShortCutReference = false;
    DialogOptions dialogOptions = new() { CloseButton = true, MaxWidth = MaxWidth.Medium, FullWidth=true, ClassBackground = "blurry" };

    private void SwitchShortCutReference()
    {
        ShowShortCutReference = !ShowShortCutReference;
    }

    private void SwitchToCurrentShortCut((string,string,string) shortcut)
    {
        CurrentShortCut = shortcut;
    }

    protected override void OnInitialized()
    {
        CurrentShortCut = titleIconDescription[0];
    }
}





